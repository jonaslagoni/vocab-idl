[
  {
    "description": "A simple const example",
    "schemas": [
      {
        "$schema": "https://json-schema.org/draft/2020-12/idl-schema",
        "name": "ExampleEnum",
        "type": "string",
        "enum": ["Some Value"]
      },
      {
        "$schema": "https://json-schema.org/draft/2020-12/idl-schema",
        "name": "ExampleEnum",
        "enum": ["Some Value"]
      }
    ],
    "tests": [
      {
        "assertion": "hasEnum",
        "tests": [
          {
            "assertion": "hasName",
            "arguments": [
              "ExampleEnum"
            ]
          },
          {
            "assertion": "hasEntry",
            "arguments": [
              "SomeValue",
              "\"Some Value\""
            ]
          }
        ]
      }
    ]
  },
  {
    "description": "A simple enum example",
    "schemas": [
      {
        "$schema": "https://json-schema.org/draft/2020-12/idl-schema",
        "name": "ExampleEnum",
        "type": "string",
        "enum": ["Some Value"]
      },
      {
        "$schema": "https://json-schema.org/draft/2020-12/idl-schema",
        "name": "ExampleEnum",
        "enum": ["Some Value"]
      }
    ],
    "tests": [
      {
        "assertion": "hasEnum",
        "tests": [
          {
            "assertion": "hasName",
            "arguments": [
              "ExampleEnum"
            ]
          },
          {
            "assertion": "hasEntry",
            "arguments": [
              "SomeValue",
              "\"Some Value\""
            ]
          }
        ]
      }
    ]
  },
  {
    "description": "Contradicting type and enum values should fail",
    "schemas": [
      {
        "$schema": "https://json-schema.org/draft/2020-12/idl-schema",
        "name": "ExampleEnum",
        "type": "number",
        "enum": ["Some Value"]
      },
      {
        "$schema": "https://json-schema.org/draft/2020-12/idl-schema",
        "name": "ExampleEnum",
        "type": "string",
        "enum": [12]
      }
    ],
    "tests": [
      {
        "assertion": "fail"
      }
    ]
  },
  {
    "description": "A complex enum example with different type values",
    "schemas": [
      {
        "$schema": "https://json-schema.org/draft/2020-12/idl-schema",
        "name": "ExampleEnum",
        "type": "string",
        "enum": ["Some Value", 1, true, {"test": "test"}]
      }
    ],
    "tests": [
      {
        "assertion": "hasEnum",
        "tests": [
          {
            "assertion": "hasName",
            "arguments": [
              "ExampleEnum"
            ]
          },
          {
            "assertion": "hasEntry",
            "arguments": [
              "SomeValue",
              "\"Some Value\""
            ]
          },
          {
            "assertion": "hasEntry",
            "arguments": [
              "Number1",
              1
            ]
          },
          {
            "assertion": "hasEntry",
            "tests": [
              {
                "assertion": "hasKey",
                "arguments": [
                  "BooleanTrue"
                ]
              },
              {
                "assertion": "hasValue",
                "arguments": [
                  true
                ]
              }
            ]
          },
          {
            "assertion": "hasEntry",
            "arguments": [
              "ObjectTestTest",
              "{\"test\": \"test\"}"
            ]
          }
        ]
      }
    ]
  }
]